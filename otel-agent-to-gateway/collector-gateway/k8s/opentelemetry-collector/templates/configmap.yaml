---
# Source: opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-gw-opentelemetry-collector
  namespace: demo-zapus
  labels:
    helm.sh/chart: opentelemetry-collector-0.108.0
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: collector-gw
    app.kubernetes.io/version: "0.111.0"
    app.kubernetes.io/managed-by: Helm

data:
  relay: |
    exporters:
      datadog:
        api:
          key: ${env:DD_API_KEY}
      debug:
        verbosity: detailed
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    processors:
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_mib: 1000
        limit_percentage: 80
        spike_limit_percentage: 25
      tail_sampling:
        decision_wait: 10s
        expected_new_traces_per_sec: 10
        num_traces: 100
        policies:
        - composite:
            composite_sub_policy:
            - name: sampling-policy-on-calendar-services
              string_attribute:
                key: service.name
                values:
                - calendar-gorilla
                - calendar-hippo
              type: string_attribute
            - name: sampling-policy-on-lobster-services
              string_attribute:
                key: service.name
                values:
                - calendar-lobster
                - calculator-lobster
              type: string_attribute
            - name: sampling-policy-on-traces-all
              type: always_sample
            max_total_spans_per_second: 1000
            policy_order:
            - sampling-policy-on-calendar-services
            - sampling-policy-on-lobster-services
            - sampling-policy-on-traces-all
            rate_allocation:
            - percent: 50
              policy: sampling-policy-on-calendar-services
            - percent: 50
              policy: sampling-policy-on-lobster-services
          name: composite-sampling-policy
          type: composite
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:14250
          thrift_compact:
            endpoint: ${env:MY_POD_IP}:6831
          thrift_http:
            endpoint: ${env:MY_POD_IP}:14268
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            endpoint: ${env:MY_POD_IP}:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: otelcol
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${env:MY_POD_IP}:8888
      zipkin:
        endpoint: ${env:MY_POD_IP}:9411
    service:
      extensions:
      - health_check
      pipelines:
        logs:
          exporters:
          - debug
          - datadog
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
        metrics:
          exporters:
          - debug
          - datadog
          processors:
          - memory_limiter
          - batch
          receivers:
          - prometheus
          - otlp
        traces:
          exporters:
          - debug
          - datadog
          processors:
          - memory_limiter
          - tail_sampling
          - batch
          receivers:
          - otlp
      telemetry:
        logs:
          level: debug
        metrics:
          address: ${env:MY_POD_IP}:8888
